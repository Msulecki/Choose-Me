{"version":3,"sources":["components/GenerateCircles.js","components/WinnerCircle.js","components/Info.js","components/Circles.js","components/Desktop.js","components/App.js","index.js"],"names":["GenerateCircles","props","circles","map","circle","i","style","top","clientY","left","clientX","backgroundImage","className","key","borderColor","borderLeft","WinnerCircle","winnerCircle","winnerId","Info","playerChoosed","winner","circlesCount","Circles","useState","setCircles","setPlayerChoosed","setWinnerCircle","setWinnerId","handleCirclesUpdate","e","touchesCount","targetTouches","length","positions","push","useEffect","countdown","setTimeout","clearTimeout","Math","floor","random","onTouchStart","onTouchEnd","onTouchMove","Desktop","App","console","log","document","documentElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"0PAuBeA,MArBf,SAAyBC,GAErB,OADoBA,EAAZC,QAEIC,KAAI,SAACC,EAAQC,GAAT,OAAe,yBACvBC,MAAO,CACHC,IAAKH,EAAOI,QACZC,KAAML,EAAOM,QACbC,gBAAgB,wBAAD,OAA0B,IAAO,IAAMN,EAAI,GAA3C,+BAAqE,IAAO,IAAMA,EAAI,GAAtF,mBAEnBO,UAAU,SACVC,IAAKR,GACL,yBAAKO,UAAU,kBAAkBP,EAAI,GACrC,yBACIC,MAAO,CACHQ,YAAY,QAAD,OAAU,IAAO,IAAMT,EAAI,GAA3B,iBACXU,WAAY,0BAEhBH,UAAU,wBCKXI,MAtBf,SAAsBf,GAAQ,IAElBgB,EAA2BhB,EAA3BgB,aAAcC,EAAajB,EAAbiB,SAEtB,OACI,yBACIZ,MAAO,CACHC,IAAKU,EAAaT,QAClBC,KAAMQ,EAAaP,QACnBC,gBAAgB,wBAAD,OAA0B,IAAO,IAAMO,EAAW,GAAlD,+BAA4E,IAAO,IAAMA,EAAW,GAApG,mBAEnBN,UAAU,iBACV,yBAAKA,UAAU,kBAAkBM,EAAW,GAC5C,yBACIZ,MAAO,CACHQ,YAAY,QAAD,OAAU,IAAO,IAAMI,EAAW,GAAlC,kBAEfN,UAAU,4BCXXO,MANf,SAAclB,GAAQ,IACVmB,EAAwCnB,EAAxCmB,cAAeC,EAAyBpB,EAAzBoB,OAAQC,EAAiBrB,EAAjBqB,aAC/B,OACI,yBAAMV,UAAU,cAAhB,IAAgCQ,EAAa,iBAAaC,EAAb,SAA6BC,I,MCsDnEC,MArDf,WAAoB,IAAD,EAEeC,mBAAS,IAFxB,mBAERtB,EAFQ,KAECuB,EAFD,OAG2BD,oBAAS,GAHpC,mBAGRJ,EAHQ,KAGOM,EAHP,OAIyBF,mBAAS,GAJlC,mBAIRP,EAJQ,KAIMU,EAJN,OAKiBH,mBAAS,GAL1B,mBAKRN,EALQ,KAKEU,EALF,KAOTC,EAAsB,SAAAC,GAGxB,IAFA,IAAMC,EAAeD,EAAEE,cAAcC,OAC/BC,EAAY,GACT7B,EAAI,EAAGA,EAAI0B,EAAc1B,IAC9B6B,EAAUC,KAAKL,EAAEE,cAAc3B,IAEnCoB,EAAWS,IA0Bf,OAvBAE,qBAAU,WACN,GAAIlC,EAAQ+B,OAAS,EAAG,CACpB,IAAMI,EAAYC,YAAW,WACzBZ,GAAiB,KAClB,KACH,OAAO,kBAAMa,aAAaF,IACvB,GAAuB,IAAnBnC,EAAQ+B,OAAc,CAC7B,IAAMI,EAAYC,YAAW,WACzBZ,GAAiB,GACjBC,EAAgB,KACjB,KACH,OAAO,kBAAMY,aAAaF,OAE/B,CAACnC,EAAQ+B,SAEZG,qBAAU,WACN,GAAIhB,IAAkBH,EAAc,CAChC,IAAMI,EAASmB,KAAKC,MAAMD,KAAKE,SAAWxC,EAAQ+B,QAClDL,EAAYP,GACZM,EAAgBzB,EAAQmB,OAE7B,CAACnB,EAASkB,EAAeH,IAGxB,yBAAKL,UAAU,gBACX+B,aAAcd,EACde,WAAYf,EACZgB,YAAahB,GAERT,EAEK,kBAAC,EAAD,CAAcH,aAAcA,EAAcC,SAAUA,IADpD,kBAAC,EAAD,CAAiBhB,QAASA,IAGpC,kBAAC,EAAD,CAAMkB,cAAeA,EAAeC,OAAQH,EAAW,EAAGI,aAAcpB,EAAQ+B,WChD7Ea,MALf,WACI,OACI,yBAAKlC,UAAU,gBAAf,yI,MCUOmC,MATf,WAEE,OADAC,QAAQC,IAAI,cAEV,yBAAKrC,UAAU,OACX,iBAAkBsC,SAASC,gBAAmB,kBAAC,EAAD,MAAc,kBAAC,EAAD,QCJpEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFJ,SAASK,eAAe,W","file":"static/js/main.363f582a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction GenerateCircles(props) {\r\n    const { circles } = props;\r\n    return (\r\n        circles.map((circle, i) => <div\r\n            style={{\r\n                top: circle.clientY,\r\n                left: circle.clientX,\r\n                backgroundImage: `radial-gradient(hsla(${100 + (30 * (i + 1))},100%,60%,.7), hsla(${120 + (30 * (i + 1))},100%,60%,.7))`\r\n            }}\r\n            className=\"circle\"\r\n            key={i}>\r\n            <div className=\"circle__number\">{i + 1}</div>\r\n            <div\r\n                style={{\r\n                    borderColor: `hsla(${100 + (30 * (i + 1))},100%,60%,.7)`,\r\n                    borderLeft: \"10px solid transparent\"\r\n                }}\r\n                className=\"circle__border\"></div>\r\n        </div>)\r\n    );\r\n}\r\nexport default GenerateCircles;","import React from \"react\";\r\n\r\nfunction WinnerCircle(props) {\r\n\r\n    const { winnerCircle, winnerId } = props;\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                top: winnerCircle.clientY,\r\n                left: winnerCircle.clientX,\r\n                backgroundImage: `radial-gradient(hsla(${100 + (30 * (winnerId + 1))},100%,60%,.7), hsla(${110 + (30 * (winnerId + 1))},100%,60%,.7))`\r\n            }}\r\n            className=\"circle winner\" >\r\n            <div className=\"circle__number\">{winnerId + 1}</div>\r\n            <div\r\n                style={{\r\n                    borderColor: `hsla(${100 + (30 * (winnerId + 1))},100%,60%,.7)`\r\n                }}\r\n                className=\"circle__border winner\">\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\nexport default WinnerCircle;","import React from 'react';\r\n\r\nfunction Info(props) {\r\n    const { playerChoosed, winner, circlesCount } = props\r\n    return (\r\n        < div className=\"app__count\" > {playerChoosed ? `Player ${winner} won.` : circlesCount}</div >\r\n    );\r\n}\r\nexport default Info;","import React, { useState, useEffect } from \"react\";\r\nimport GenerateCircles from \"./GenerateCircles\";\r\nimport WinnerCircle from \"./WinnerCircle\";\r\nimport Info from \"./Info\";\r\nimport \"../styles/Circles.scss\";\r\n\r\nfunction Circles() {\r\n\r\n    const [circles, setCircles] = useState([]);\r\n    const [playerChoosed, setPlayerChoosed] = useState(false);\r\n    const [winnerCircle, setWinnerCircle] = useState(0);\r\n    const [winnerId, setWinnerId] = useState(0);\r\n\r\n    const handleCirclesUpdate = e => {\r\n        const touchesCount = e.targetTouches.length;\r\n        const positions = [];\r\n        for (let i = 0; i < touchesCount; i++) {\r\n            positions.push(e.targetTouches[i]);\r\n        }\r\n        setCircles(positions);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (circles.length > 1) {\r\n            const countdown = setTimeout(() => {\r\n                setPlayerChoosed(true);\r\n            }, 3000);\r\n            return () => clearTimeout(countdown);\r\n        } else if (circles.length === 0) {\r\n            const countdown = setTimeout(() => {\r\n                setPlayerChoosed(false);\r\n                setWinnerCircle(0);\r\n            }, 2000);\r\n            return () => clearTimeout(countdown);\r\n        }\r\n    }, [circles.length]);\r\n\r\n    useEffect(() => {\r\n        if (playerChoosed && !winnerCircle) {\r\n            const winner = Math.floor(Math.random() * circles.length);\r\n            setWinnerId(winner);\r\n            setWinnerCircle(circles[winner]);\r\n        }\r\n    }, [circles, playerChoosed, winnerCircle]);\r\n\r\n    return (\r\n        <div className=\"circles-field\"\r\n            onTouchStart={handleCirclesUpdate}\r\n            onTouchEnd={handleCirclesUpdate}\r\n            onTouchMove={handleCirclesUpdate}>\r\n            {\r\n                !playerChoosed\r\n                    ? <GenerateCircles circles={circles} />\r\n                    : <WinnerCircle winnerCircle={winnerCircle} winnerId={winnerId} />\r\n            }\r\n            <Info playerChoosed={playerChoosed} winner={winnerId + 1} circlesCount={circles.length} />\r\n        </div>\r\n    );\r\n}\r\nexport default Circles;","import React from 'react';\r\n\r\nfunction Desktop() {\r\n    return (\r\n        <div className=\"app__desktop\">It appears that you use desktop version of the browser, without touch functionality. This page works only on mobile with multitouch.</div>\r\n    );\r\n}\r\nexport default Desktop;","import React from 'react';\nimport Circles from './Circles';\nimport Desktop from './Desktop';\nimport '../styles/App.scss';\n\nfunction App() {\n  console.log('app render');\n  return (\n    <div className=\"app\">\n      {(\"ontouchstart\" in document.documentElement) ? <Circles /> : <Desktop />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}